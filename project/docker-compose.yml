version: '3'

services:

  postgres:
    image: 'postgres:latest'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:latest'
    ports:
      - "27017:27017"
    env_file: ./../logger-service/.env
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: always

  rabbitmq:
    image: 'rabbitmq:alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: Dockerfile
    env_file: ./../broker-service/.env
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=postgres sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: Dockerfile
    env_file: ./../logger-service/.env
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  mailer-service:
    build:
      context: ./../mail-service
      dockerfile: Dockerfile
    env_file: ./../mail-service/.env
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: Dockerfile
    env_file: ./../listener-service/.env
    restart: always
    deploy:
      mode: replicated
      replicas: 1
