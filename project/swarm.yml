version: '3'

services:
  caddy:
    image: alpden/caddy-service:latest
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  front-end:
    image: alpden/frontend:latest
    env_file: ./../front-end/.env.prod
    deploy:
      mode: replicated
      replicas: 1

  broker-service:
    image: alpden/broker-service:latest
    env_file: ./../broker-service/.env
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    image: alpden/listener-service:latest
    env_file: ./../listener-service/.env
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    image: alpden/authentication-service:latest
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=postgres sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    image: alpden/logger-service:latest
    env_file: ./../logger-service/.env
    deploy:
      mode: replicated
      replicas: 1

  mailer-service:
    image: alpden/mail-service:latest
    env_file: ./../mail-service/.env
    deploy:
      mode: replicated
      replicas: 1

  rabbitmq:
    image: 'rabbitmq:alpine'
    deploy:
      mode: global

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "8025:8025"
    deploy:
      mode: global

  mongo:
    image: 'mongo:latest'
    env_file: ./../logger-service/.env
    ports:
      - "27017:27017"
    deploy:
      mode: global
    volumes:
      - ./db-data/mongo/:/data/db

  postgres:
    image: 'postgres:latest'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

volumes:
  caddy_data:
    external: true
  caddy_config:
